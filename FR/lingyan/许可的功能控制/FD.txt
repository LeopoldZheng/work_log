
设计图：
https://www.processon.com/v/68d62f74a225f06bfca6baf9


功能权限控制：
  1. lingyan.meta.yml的定义，用于定义不同功能包所具有的功能。
  2. hillos-core 如hillos-api-gateway权限控制数据。
  3. 不同功能包的license定义（需要找建武沟通）
  4. 功能控制






app打包
============ app: 许可的功能定义在metedata ===============
license_function:
  - license_id: xxx
    # 与agent无关的功能，可以在ai-gateway统一校验
	common_type:
	  urls:
	    - url: /chat
		  configuration:
	    - url: /knowledge/*
		  configuration:
	# 与agent相关的功能；ai-gateway拿不到plan请求的动态规划出的agent_id，只能在app那边触发校验
    agent_type:
	  - agent_id: xxx
	    urls:
	      - url: xxx
		    configuration: # 描述同一功能、不同许可下的资源配置。如试用许可的数据分类分级字段总数限量不同
	      - url: xxx
		    configuration:
    description: 进阶包license

============ ai-gateway: license配置的存储 ===============
application.yml
app_license:
  # 预置的license
  preload_license:
    - license_id: 试用版
      type: DAYS
      value: 30
      description:
    - license_id: 基础版
      type: DATE
      value: 2100-12-31 （NULL就是永久）
      description: yyy
  # 其他license，用于校验时用
  common_license:
    - 进阶包license_id1
    - 进阶包license_id2

app安装场景：
- 许可功能定义入库 t_app_license_function (appid、metadata)
- 预置基础包的功能：
  - 入库 t_app_license_tenant (license_id、expired_time、expired_time_type、order_time)
  - 入redis:
    - app_license:common_type:{预置license_id}:{appid}:{url}        值：  {expired_time} + {configuration}
    - app_license:agent_type: {预置license_id}:{appid}:{agent_id}   值：  {expired_time} + {configuration}

云端用户购买进阶包场景：
- 云景推送：租户id、license_id、expired_time、expired_time_type、order_time
- 入库 t_app_license_tenant (租户id、license_id、expired_time、expired_time_type、order_time)
- 再入redis:
  - app_license:{租户id}:common_type:{进阶license_id}:{appid}:{url}         值：  {expired_time} + {configuration}
  - app_license:{租户id}:agent_type: {进阶license_id}:{appid}:{agent_id}    值：  {expired_time} + {configuration}

============ ai-gateway: license的功能控制 ===============
用户请求场景：
    ai-gateway 做 common_check:
      - 先找预置license的redis key，若找到，校验过期时间和configuration
      - 再找进阶license的redis key，若找到，校验过期时间和configuration
      - 找不到，拒绝请求
    app 触发 agent_check：
      - 先找预置license的redis key，若找到，校验过期时间和configuration
      - 再找进阶license的redis key，若找到，校验过期时间和configuration
      - 找不到，拒绝请求


=========== 其他业务场景 ==================================
许可变更：
	租户删除
	许可变更（租户合并、升级进阶版）
	许可到期（进阶版到期）


许可展示
    展示有功能权限的应用和智能体


ai-gateway服务重启场景：
  把 t_app_license_tenant 数据捞到redis里




